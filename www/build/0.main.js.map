{"version":3,"sources":["../../src/pages/tabs/tabs.module.ts","../../node_modules/@ionic-native/app-version/index.js","../../node_modules/@ionic-native/file-opener/index.js","../../node_modules/@ionic-native/file/index.js","../../node_modules/@ionic-native/transfer/index.js","../../src/pages/tabs/tabs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AACqB;AACA;AACW;AACxB;AAoB1C,IAAa,UAAU;IAAvB;IAAyB,CAAC;IAAD,iBAAC;AAAD,CAAC;AAAb,UAAU;IAlBtB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,uDAAQ;SACT;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;SACnC;QACD,OAAO,EAAE;YACP,uDAAQ;SACT;QACD,SAAS,EAAE;YACT,6EAAU;YACV,6EAAU;YACV,wEAAQ;YACR,8EAAc;YACd,gEAAI;SACL;KACF,CAAC;GACW,UAAU,CAAG;AAAH;;;;;;;;;;;AC1BvB;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,iBAAiB;AACjB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA,yDAAyD,QAAQ;AACjE;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;AC9GA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,4BAA4B,OAAO;AACnC,iBAAiB;AACjB;AACA,mEAAmE,QAAQ;AAC3E;AACA;AACA,yBAAyB,OAAO;AAChC,iBAAiB;AACjB;AACA,2DAA2D,QAAQ;AACnE;AACA;AACA,yBAAyB,OAAO;AAChC,iBAAiB;AACjB;AACA,gEAAgE,QAAQ;AACxE;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,yCAAyC,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;AC/GA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AAC8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,kCAAkC;AACvF,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,WAAW,EAAE;AAC5C;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,iBAAiB,cAAc;AAC/B;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,6BAA6B,OAAO;AACpC,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,wBAAwB,OAAO;AAC/B,qBAAqB,MAAM;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,mCAAmiC;;;;;;;;;;;AC76BA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACkE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;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","file":"0.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TabsPage } from './tabs';\nimport { AppVersion } from '@ionic-native/app-version';\nimport { FileOpener } from '@ionic-native/file-opener';\nimport { Transfer, TransferObject } from '@ionic-native/transfer';\nimport { File } from '@ionic-native/file';\n\n@NgModule({\n  declarations: [\n    TabsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TabsPage)\n  ],\n  exports: [\n    TabsPage\n  ],\n  providers: [\n    AppVersion,\n    FileOpener,\n    Transfer,\n    TransferObject,\n    File\n  ]\n})\nexport class TabsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name App Version\n * @description\n * Reads the version of your app from the target build settings.\n *\n * Requires Cordova plugin: `cordova-plugin-app-version`. For more info, please see the [Cordova App Version docs](https://github.com/whiteoctober/cordova-plugin-app-version).\n *\n * @usage\n * ```typescript\n * import { AppVersion } from '@ionic-native/app-version';\n *\n * constructor(private appVersion: AppVersion) { }\n *\n * ...\n *\n *\n * this.appVersion.getAppName();\n * this.appVersion.getPackageName();\n * this.appVersion.getVersionCode();\n * this.appVersion.getVersionNumber();\n *\n * ```\n */\nvar AppVersion = (function (_super) {\n    __extends(AppVersion, _super);\n    function AppVersion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Returns the name of the app\n     * @returns {Promise<any>}\n     */\n    AppVersion.prototype.getAppName = function () { return; };\n    /**\n     * Returns the package name of the app\n     * @returns {Promise<any>}\n     */\n    AppVersion.prototype.getPackageName = function () { return; };\n    /**\n     * Returns the build identifier of the app\n     * @returns {Promise<any>}\n     */\n    AppVersion.prototype.getVersionCode = function () { return; };\n    /**\n     * Returns the version of the app\n     * @returns {Promise<any>}\n     */\n    AppVersion.prototype.getVersionNumber = function () { return; };\n    return AppVersion;\n}(IonicNativePlugin));\nAppVersion.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nAppVersion.ctorParameters = function () { return []; };\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], AppVersion.prototype, \"getAppName\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], AppVersion.prototype, \"getPackageName\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], AppVersion.prototype, \"getVersionCode\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], AppVersion.prototype, \"getVersionNumber\", null);\nAppVersion = __decorate([\n    Plugin({\n        pluginName: 'AppVersion',\n        plugin: 'cordova-plugin-app-version',\n        pluginRef: 'cordova.getAppVersion',\n        repo: 'https://github.com/whiteoctober/cordova-plugin-app-version',\n        platforms: ['Android', 'iOS', 'Windows']\n    })\n], AppVersion);\nexport { AppVersion };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/app-version/index.js\n// module id = 283\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name File Opener\n * @description\n * This plugin will open a file on your device file system with its default application.\n *\n * @usage\n * ```typescript\n * import { FileOpener } from '@ionic-native/file-opener';\n *\n * constructor(private fileOpener: FileOpener) { }\n *\n * ...\n *\n * this.fileOpener.open('path/to/file.pdf', 'application/pdf')\n *   .then(() => console.log('File is opened'))\n *   .catch(e => console.log('Error openening file', e));\n *\n * ```\n */\nvar FileOpener = (function (_super) {\n    __extends(FileOpener, _super);\n    function FileOpener() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Open an file\n     * @param filePath {string} File Path\n     * @param fileMIMEType {string} File MIME Type\n     * @returns {Promise<any>}\n     */\n    FileOpener.prototype.open = function (filePath, fileMIMEType) { return; };\n    /**\n     * Uninstalls a package\n     * @param packageId {string}  Package ID\n     * @returns {Promise<any>}\n     */\n    FileOpener.prototype.uninstall = function (packageId) { return; };\n    /**\n     * Check if an app is already installed\n     * @param packageId {string} Package ID\n     * @returns {Promise<any>}\n     */\n    FileOpener.prototype.appIsInstalled = function (packageId) { return; };\n    return FileOpener;\n}(IonicNativePlugin));\nFileOpener.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nFileOpener.ctorParameters = function () { return []; };\n__decorate([\n    Cordova({\n        callbackStyle: 'object',\n        successName: 'success',\n        errorName: 'error'\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], FileOpener.prototype, \"open\", null);\n__decorate([\n    Cordova({\n        callbackStyle: 'object',\n        successName: 'success',\n        errorName: 'error'\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], FileOpener.prototype, \"uninstall\", null);\n__decorate([\n    Cordova({\n        callbackStyle: 'object',\n        successName: 'success',\n        errorName: 'error'\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], FileOpener.prototype, \"appIsInstalled\", null);\nFileOpener = __decorate([\n    Plugin({\n        pluginName: 'FileOpener',\n        plugin: 'cordova-plugin-file-opener2',\n        pluginRef: 'cordova.plugins.fileOpener2',\n        repo: 'https://github.com/pwlin/cordova-plugin-file-opener2',\n        platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n    })\n], FileOpener);\nexport { FileOpener };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/file-opener/index.js\n// module id = 284\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaProperty, Plugin, CordovaCheck, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name File\n * @description\n * This plugin implements a File API allowing read/write access to files residing on the device.\n *\n * The File class implements static convenience functions to access files and directories.\n *\n * Example:\n * ```\n * import { File } from '@ionic-native/file';\n *\n * constructor(private file: File) { }\n *\n * ...\n *\n * this.file.checkDir(this.file.dataDirectory, 'mydir').then(_ => console.log('Directory exists')).catch(err => console.log('Directory doesnt exist'));\n *\n * ```\n *\n *  This plugin is based on several specs, including : The HTML5 File API http: //www.w3.org/TR/FileAPI/\n *  The (now-defunct) Directories and System extensions Latest: http: //www.w3.org/TR/2012/WD-file-system-api-20120417/\n *  Although most of the plugin code was written when an earlier spec was current: http: //www.w3.org/TR/2011/WD-file-system-api-20110419/\n *  It also implements the FileWriter spec : http: //dev.w3.org/2009/dap/file-system/file-writer.html\n *  @interfaces\n *  IFile\n *  Entry\n *  DirectoryEntry\n *  DirectoryReader\n *  FileSystem\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cordovaFileError = {\n            1: 'NOT_FOUND_ERR',\n            2: 'SECURITY_ERR',\n            3: 'ABORT_ERR',\n            4: 'NOT_READABLE_ERR',\n            5: 'ENCODING_ERR',\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\n            7: 'INVALID_STATE_ERR',\n            8: 'SYNTAX_ERR',\n            9: 'INVALID_MODIFICATION_ERR',\n            10: 'QUOTA_EXCEEDED_ERR',\n            11: 'TYPE_MISMATCH_ERR',\n            12: 'PATH_EXISTS_ERR',\n            13: 'WRONG_ENTRY_TYPE',\n            14: 'DIR_READ_ERR',\n        };\n        return _this;\n    }\n    /**\n     * Get free disk space in Bytes\n     * @returns {Promise<number>} Returns a promise that resolves with the remaining free disk space in Bytes\n     */\n    File.prototype.getFreeDiskSpace = function () {\n        return new Promise(function (resolve, reject) {\n            cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\n        });\n    };\n    /**\n     * Check if a directory exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dir Name of directory to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\n     */\n    File.prototype.checkDir = function (path, dir) {\n        if ((/^\\//.test(dir))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var fullpath = path + dir;\n        return this.resolveDirectoryUrl(fullpath)\n            .then(function () {\n            return true;\n        });\n    };\n    /**\n     * Creates a new directory in the specific path.\n     * The replace boolean value determines whether to replace an existing directory with the same name.\n     * If an existing directory exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\n     */\n    File.prototype.createDir = function (path, dirName, replace) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var options = {\n            create: true\n        };\n        if (!replace) {\n            options.exclusive = true;\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, options);\n        });\n    };\n    /**\n     * Remove a directory at a given path.\n     *\n     * @param {string} path The path to the directory\n     * @param {string} dirName The directory name\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    File.prototype.removeDir = function (path, dirName) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (de) {\n            return _this.remove(de);\n        });\n    };\n    /**\n     * Move a directory to a given path.\n     *\n     * @param {string} path The source path to the directory\n     * @param {string} dirName The source directory name\n     * @param {string} newPath The destionation path to the directory\n     * @param {string} newDirName The destination directory name\n     * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with an error.\n     */\n    File.prototype.moveDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        newDirName = newDirName || dirName;\n        if ((/^\\//.test(newDirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (srcde) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.move(srcde, deste, newDirName);\n            });\n        });\n    };\n    /**\n     * Copy a directory in various methods. If destination directory exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newDirName New name of directory to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n     */\n    File.prototype.copyDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        if ((/^\\//.test(newDirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (srcde) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.copy(srcde, deste, newDirName);\n            });\n        });\n    };\n    /**\n     * List files and directory from a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\n     */\n    File.prototype.listDir = function (path, dirName) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false, exclusive: false });\n        })\n            .then(function (de) {\n            var reader = de.createReader();\n            return _this.readEntries(reader);\n        });\n    };\n    /**\n     * Removes all files and the directory from a desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\n     */\n    File.prototype.removeRecursively = function (path, dirName) {\n        var _this = this;\n        if ((/^\\//.test(dirName))) {\n            var err = new FileError(5);\n            err.message = 'directory cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getDirectory(fse, dirName, { create: false });\n        })\n            .then(function (de) {\n            return _this.rimraf(de);\n        });\n    };\n    /**\n     * Check if a file exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\n     */\n    File.prototype.checkFile = function (path, file) {\n        if ((/^\\//.test(file))) {\n            var err = new FileError(5);\n            err.message = 'file cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveLocalFilesystemUrl(path + file)\n            .then(function (fse) {\n            if (fse.isFile) {\n                return true;\n            }\n            else {\n                var err = new FileError(13);\n                err.message = 'input is not a file';\n                return Promise.reject(err);\n            }\n        });\n    };\n    /**\n     * Creates a new file in the specific path.\n     * The replace boolean value determines whether to replace an existing file with the same name.\n     * If an existing file exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\n     */\n    File.prototype.createFile = function (path, fileName, replace) {\n        var _this = this;\n        if ((/^\\//.test(fileName))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var options = {\n            create: true\n        };\n        if (!replace) {\n            options.exclusive = true;\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, options);\n        });\n    };\n    /**\n     * Removes a file from a desired location.\n     *\n     * @param {string} path  Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to remove\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    File.prototype.removeFile = function (path, fileName) {\n        var _this = this;\n        if ((/^\\//.test(fileName))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (fe) {\n            return _this.remove(fe);\n        });\n    };\n    /** Write a new file to the desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob} text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    File.prototype.writeFile = function (path, fileName, text, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if ((/^\\//.test(fileName))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        var getFileOpts = {\n            create: !options.append,\n            exclusive: !options.replace\n        };\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, fileName, getFileOpts);\n        })\n            .then(function (fileEntry) {\n            return _this.writeFileEntry(fileEntry, text, options);\n        });\n    };\n    /** Write content to FileEntry.\n     *\n     * @hidden\n     * @param {FileEntry} fe file entry object\n     * @param {string | Blob} text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    File.prototype.writeFileEntry = function (fe, text, options) {\n        var _this = this;\n        return this.createWriter(fe)\n            .then(function (writer) {\n            if (options.append) {\n                writer.seek(writer.length);\n            }\n            if (options.truncate) {\n                writer.truncate(options.truncate);\n            }\n            return _this.write(writer, text);\n        })\n            .then(function () { return fe; });\n    };\n    /** Write to an existing file.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob} text content or blob to write\n     * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\n     */\n    File.prototype.writeExistingFile = function (path, fileName, text) {\n        return this.writeFile(path, fileName, text, { replace: true });\n    };\n    /**\n     * Read the contents of a file as text.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\n     */\n    File.prototype.readAsText = function (path, file) {\n        return this.readFile(path, file, 'Text');\n    };\n    /**\n     * Read file and return data as a base64 encoded data url.\n     * A data url is of the form:\n     *      data: [<mediatype>][;base64],<data>\n  \n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects with an error.\n     */\n    File.prototype.readAsDataURL = function (path, file) {\n        return this.readFile(path, file, 'DataURL');\n    };\n    /**\n     * Read file and return data as a binary data.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\n     */\n    File.prototype.readAsBinaryString = function (path, file) {\n        return this.readFile(path, file, 'BinaryString');\n    };\n    /**\n     * Read file and return data as an ArrayBuffer.\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects with an error.\n     */\n    File.prototype.readAsArrayBuffer = function (path, file) {\n        return this.readFile(path, file, 'ArrayBuffer');\n    };\n    File.prototype.readFile = function (path, file, readAs) {\n        var _this = this;\n        if ((/^\\//.test(file))) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, file, { create: false });\n        })\n            .then(function (fileEntry) {\n            var reader = new FileReader();\n            return new Promise(function (resolve, reject) {\n                reader.onloadend = function () {\n                    if (reader.result !== undefined || reader.result !== null) {\n                        resolve(reader.result);\n                    }\n                    else if (reader.error !== undefined || reader.error !== null) {\n                        reject(reader.error);\n                    }\n                    else {\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                    }\n                };\n                fileEntry.file(function (file) {\n                    reader[\"readAs\" + readAs].call(reader, file);\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        });\n    };\n    /**\n     * Move a file to a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to move\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to move to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\n     */\n    File.prototype.moveFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        newFileName = newFileName || fileName;\n        if ((/^\\//.test(newFileName))) {\n            var err = new FileError(5);\n            err.message = 'file name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (srcfe) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.move(srcfe, deste, newFileName);\n            });\n        });\n    };\n    /**\n     * Copy a file in various methods. If file exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\n     */\n    File.prototype.copyFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        newFileName = newFileName || fileName;\n        if ((/^\\//.test(newFileName))) {\n            var err = new FileError(5);\n            err.message = 'file name cannot start with \\/';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (fse) {\n            return _this.getFile(fse, fileName, { create: false });\n        })\n            .then(function (srcfe) {\n            return _this.resolveDirectoryUrl(newPath)\n                .then(function (deste) {\n                return _this.copy(srcfe, deste, newFileName);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.fillErrorMessage = function (err) {\n        try {\n            err.message = this.cordovaFileError[err.code];\n        }\n        catch (e) { }\n    };\n    /**\n     * Resolves a local file system URL\n     * @param fileUrl {string} file system url\n     * @returns {Promise<Entry>}\n     */\n    File.prototype.resolveLocalFilesystemUrl = function (fileUrl) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                window.resolveLocalFileSystemURL(fileUrl, function (entry) {\n                    resolve(entry);\n                }, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * Resolves a local directory url\n     * @param directoryUrl {string} directory system url\n     * @returns {Promise<DirectoryEntry>}\n     */\n    File.prototype.resolveDirectoryUrl = function (directoryUrl) {\n        return this.resolveLocalFilesystemUrl(directoryUrl)\n            .then(function (de) {\n            if (de.isDirectory) {\n                return de;\n            }\n            else {\n                var err = new FileError(13);\n                err.message = 'input is not a directory';\n                return Promise.reject(err);\n            }\n        });\n    };\n    /**\n     * Get a directory\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param directoryName {string} Directory name\n     * @param flags {Flags} Options\n     * @returns {Promise<DirectoryEntry>}\n     */\n    File.prototype.getDirectory = function (directoryEntry, directoryName, flags) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                directoryEntry.getDirectory(directoryName, flags, function (de) {\n                    resolve(de);\n                }, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * Get a file\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param fileName {string} File name\n     * @param flags {Flags} Options\n     * @returns {Promise<FileEntry>}\n     */\n    File.prototype.getFile = function (directoryEntry, fileName, flags) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                directoryEntry.getFile(fileName, flags, resolve, function (err) {\n                    _this.fillErrorMessage(err);\n                    reject(err);\n                });\n            }\n            catch (xc) {\n                _this.fillErrorMessage(xc);\n                reject(xc);\n            }\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.remove = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.remove(function () {\n                resolve({ success: true, fileRemoved: fe });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.move = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.moveTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.copy = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.copyTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.readEntries = function (dr) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            dr.readEntries(function (entries) {\n                resolve(entries);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.rimraf = function (de) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            de.removeRecursively(function () {\n                resolve({ success: true, fileRemoved: de });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.createWriter = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.createWriter(function (writer) {\n                resolve(writer);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.write = function (writer, gu) {\n        if (gu instanceof Blob) {\n            return this.writeFileInChunks(writer, gu);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onwriteend = function (evt) {\n                if (writer.error) {\n                    reject(writer.error);\n                }\n                else {\n                    resolve(evt);\n                }\n            };\n            writer.write(gu);\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.writeFileInChunks = function (writer, file) {\n        var BLOCK_SIZE = 1024 * 1024;\n        var writtenSize = 0;\n        function writeNextChunk() {\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\n            var chunk = file.slice(writtenSize, writtenSize + size);\n            writtenSize += size;\n            writer.write(chunk);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onerror = reject;\n            writer.onwrite = function () {\n                if (writtenSize < file.size) {\n                    writeNextChunk();\n                }\n                else {\n                    resolve();\n                }\n            };\n            writeNextChunk();\n        });\n    };\n    return File;\n}(IonicNativePlugin));\nFile.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nFile.ctorParameters = function () { return []; };\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"applicationDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"applicationStorageDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"dataDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"cacheDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"externalApplicationStorageDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"externalDataDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"externalCacheDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"externalRootDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"tempDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"syncedDataDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"documentsDirectory\", void 0);\n__decorate([\n    CordovaProperty,\n    __metadata(\"design:type\", String)\n], File.prototype, \"sharedDirectory\", void 0);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"getFreeDiskSpace\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"checkDir\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Boolean]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"createDir\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"removeDir\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"moveDir\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"copyDir\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"listDir\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"removeRecursively\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"checkFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Boolean]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"createFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"removeFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object, Object]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"writeFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"writeExistingFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"readAsText\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"readAsDataURL\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"readAsBinaryString\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"readAsArrayBuffer\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"moveFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, String, String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"copyFile\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"resolveLocalFilesystemUrl\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"resolveDirectoryUrl\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object, String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"getDirectory\", null);\n__decorate([\n    CordovaCheck(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object, String, Object]),\n    __metadata(\"design:returntype\", Promise)\n], File.prototype, \"getFile\", null);\nFile = __decorate([\n    Plugin({\n        pluginName: 'File',\n        plugin: 'cordova-plugin-file',\n        pluginRef: 'cordova.file',\n        repo: 'https://github.com/apache/cordova-plugin-file',\n        platforms: ['Android', 'BlackBerry 10', 'Browser', 'Firefox OS', 'iOS', 'macOS', 'Ubuntu', 'Windows', 'Windows Phone']\n    })\n], File);\nexport { File };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/file/index.js\n// module id = 285\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { CordovaInstance, Plugin, InstanceCheck, checkAvailability, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Transfer\n *\n * @description\n * This plugin allows you to upload and download files.\n *\n * @usage\n * ```typescript\n * import { Transfer, FileUploadOptions, TransferObject } from '@ionic-native/transfer';\n * import { File } from '@ionic-native/file';\n *\n * constructor(private transfer: Transfer, private file: File) { }\n *\n * ...\n *\n * const fileTransfer: TransferObject = this.transfer.create();\n *\n * // Upload a file:\n * fileTransfer.upload(..).then(..).catch(..);\n *\n * // Download a file:\n * fileTransfer.download(..).then(..).catch(..);\n *\n * // Abort active transfer:\n * fileTransfer.abort();\n *\n * // full example\n * upload() {\n *   let options: FileUploadOptions = {\n *      fileKey: 'file',\n *      fileName: 'name.jpg',\n *      headers: {}\n *      .....\n *   }\n *\n *   fileTransfer.upload('<file path>', '<api endpoint>', options)\n *    .then((data) => {\n *      // success\n *    }, (err) => {\n *      // error\n *    })\n * }\n **\n * download() {\n *   const url = 'http://www.example.com/file.pdf';\n *   fileTransfer.download(url, this.file.dataDirectory + 'file.pdf').then((entry) => {\n *     console.log('download complete: ' + entry.toURL());\n *   }, (error) => {\n *     // handle error\n *   });\n * }\n *\n * ```\n *\n * To store files in a different/publicly accessible directory, please refer to the following link\n * https://github.com/apache/cordova-plugin-file#where-to-store-files\n *\n * @interfaces\n * FileUploadOptions\n * FileUploadResult\n * FileTransferError\n * @classes\n * TransferObject\n */\nvar Transfer = (function (_super) {\n    __extends(Transfer, _super);\n    function Transfer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Error code rejected from upload with FileTransferError\n         * Defined in FileTransferError.\n         *      FILE_NOT_FOUND_ERR: 1   Return when file was not found\n         *      INVALID_URL_ERR: 2,     Return when url was invalid\n         *      CONNECTION_ERR: 3,      Return on connection error\n         *      ABORT_ERR: 4,           Return on aborting\n         *      NOT_MODIFIED_ERR: 5     Return on '304 Not Modified' HTTP response\n         * @enum {number}\n         */\n        _this.FileTransferErrorCode = {\n            FILE_NOT_FOUND_ERR: 1,\n            INVALID_URL_ERR: 2,\n            CONNECTION_ERR: 3,\n            ABORT_ERR: 4,\n            NOT_MODIFIED_ERR: 5\n        };\n        return _this;\n    }\n    /**\n     * Creates a new FileTransfer object\n     * @return {TransferObject}\n     */\n    Transfer.prototype.create = function () {\n        return new TransferObject();\n    };\n    return Transfer;\n}(IonicNativePlugin));\nTransfer.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTransfer.ctorParameters = function () { return []; };\nTransfer = __decorate([\n    Plugin({\n        pluginName: 'FileTransfer',\n        plugin: 'cordova-plugin-file-transfer',\n        pluginRef: 'FileTransfer',\n        repo: 'https://github.com/apache/cordova-plugin-file-transfer',\n        platforms: ['Amazon Fire OS', 'Android', 'Browser', 'iOS', 'Ubuntu', 'Windows', 'Windows Phone']\n    })\n], Transfer);\nexport { Transfer };\n/**\n * @hidden\n */\nvar TransferObject = (function () {\n    function TransferObject() {\n        if (checkAvailability('FileTransfer', null, 'FileTransfer') === true) {\n            this._objectInstance = new FileTransfer();\n        }\n    }\n    /**\n     * Sends a file to a server.\n     *\n     * @param {string} fileUrl  Filesystem URL representing the file on the device or a data URI. For backwards compatibility, this can also be the full path of the file on the device.\n     * @param {string} url  URL of the server to receive the file, as encoded by encodeURI().\n     * @param {FileUploadOptions} options  Optional parameters.\n     * @param {boolean} trustAllHosts  Optional parameter, defaults to false. If set to true, it accepts all security certificates. This is useful since Android rejects self-signed security certificates. Not recommended for production use. Supported on Android and iOS.\n     * @returns {Promise<FileUploadResult>} Returns a Promise that resolves to a FileUploadResult and rejects with FileTransferError.\n     */\n    TransferObject.prototype.upload = function (fileUrl, url, options, trustAllHosts) {\n        return;\n    };\n    /**\n     * Downloads a file from server.\n     *\n     * @param {string} source  URL of the server to download the file, as encoded by encodeURI().\n     * @param {stirng} target  Filesystem url representing the file on the device. For backwards compatibility, this can also be the full path of the file on the device.\n     * @param {boolean} trustAllHosts  Optional parameter, defaults to false. If set to true, it accepts all security certificates. This is useful because Android rejects self-signed security certificates. Not recommended for production use. Supported on Android and iOS.\n     * @param {object} Optional parameters, currently only supports headers (such as Authorization (Basic Authentication), etc).\n     * @returns {Promise<any>} Returns a Promise that resolves to a FileEntry object.\n     */\n    TransferObject.prototype.download = function (source, target, trustAllHosts, options) {\n        return;\n    };\n    /**\n     * Registers a listener that gets called whenever a new chunk of data is transferred.\n     * @param listener {function} Listener that takes a progress event.\n     */\n    TransferObject.prototype.onProgress = function (listener) {\n        this._objectInstance.onprogress = listener;\n    };\n    /**\n     * Aborts an in-progress transfer. The onerror callback is passed a FileTransferError\n     * object which has an error code of FileTransferError.ABORT_ERR.\n     */\n    TransferObject.prototype.abort = function () { };\n    return TransferObject;\n}());\n__decorate([\n    CordovaInstance({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Object, Boolean]),\n    __metadata(\"design:returntype\", Promise)\n], TransferObject.prototype, \"upload\", null);\n__decorate([\n    CordovaInstance({\n        successIndex: 2,\n        errorIndex: 3\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String, Boolean, Object]),\n    __metadata(\"design:returntype\", Promise)\n], TransferObject.prototype, \"download\", null);\n__decorate([\n    InstanceCheck({ sync: true }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Function]),\n    __metadata(\"design:returntype\", void 0)\n], TransferObject.prototype, \"onProgress\", null);\n__decorate([\n    CordovaInstance({\n        sync: true\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], TransferObject.prototype, \"abort\", null);\nTransferObject = __decorate([\n    Plugin({\n        plugin: 'cordova-plugin-file-transfer',\n        pluginName: 'FileTransfer'\n    }),\n    __metadata(\"design:paramtypes\", [])\n], TransferObject);\nexport { TransferObject };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/transfer/index.js\n// module id = 286\n// module chunks = 0","import { Component, ViewChild } from '@angular/core';\nimport { IonicPage, Platform, NavController, Tabs, ToastController } from 'ionic-angular';\nimport { pubilcService } from '../../service/public';\nimport { AppVersion } from '@ionic-native/app-version';\nimport { Headers, Http } from '@angular/http';\nimport { FileOpener } from '@ionic-native/file-opener';\nimport { Transfer, TransferObject } from '@ionic-native/transfer';\nimport { File } from '@ionic-native/file';\nimport { AlertController } from 'ionic-angular';\n\ndeclare var codePush: any;\n@IonicPage()\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  @ViewChild('myTabs') tabs: Tabs;\n  backButtonPressed: boolean = false;\n  itimer = null;\n  apkDownloadUrl='';\n  fileTransfer: TransferObject;\n\n  tab1Root = 'NewPage';\n  tab2Root = 'HomePage';\n  tab3Root = 'ClassifyPage';\n  tab4Root = 'CollectPage';\n\n  constructor(\n    public navCtrl: NavController, \n    public platform: Platform, \n    public http: Http, \n    public toastCtrl: ToastController, \n    public appVersion: AppVersion, \n    public alertCtrl: AlertController, \n    public file: File,\n    public fileOpener: FileOpener, \n    public transfer: Transfer, \n    public pubilcService: pubilcService\n    ) {\n    this.pageBack();\n    appVersion.getVersionNumber().then((version) => {\n      this.pubilcService.Version = version;\n    });\n    codePush.sync();\n  }\n\n  //app版本获取\n  getAppVersion() {\n\n    let url = \"http://www.devonhello.com/chihu/appversion\";\n\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    this.http.post(url, \"\", {\n      headers: headers\n    })\n      .subscribe((res) => {\n        //alert(res.json()[0][\"v\"]);\n        if (res.json()[0][\"v\"] != this.pubilcService.Version) {\n          //可升级\n          this.apkDownloadUrl = res.json()[0][\"url\"];\n          this.fileTransfer = this.transfer.create();\n          this.AppV();\n        }\n      });\n  }\n\n  //下载最新版本\n  download() {\n    var _that = this;\n    var apkurl = this.file.externalDataDirectory + 'buka.apk';\n    this.fileTransfer.download(this.apkDownloadUrl, apkurl).then((entry) => {\n      //打开apk\n      this.fileOpener.open(apkurl, 'application/vnd.android.package-archive')\n        .then(() => console.log('File is opened'))\n        .catch(e => alert('Error：' + e));\n\n    }, (error) => {\n      // handle error\n    });\n\n  }\n\n  AppV() {\n\n\n    let alert = this.alertCtrl.create({\n      title: '提示',\n      message: '是否要更新到最新版本?',\n      buttons: [\n        {\n          text: '取消',\n          role: 'cancel',\n          handler: () => {\n            //console.log('Cancel clicked');\n          }\n        },\n        {\n          text: '确定',\n          handler: () => {\n            this.download();\n          }\n        }\n      ]\n    });\n\n    alert.present();\n  }\n\n  pageBack() {\n\n    this.platform.registerBackButtonAction((): any => {\n      this.pubilcService.presentLoadingDismiss();\n      let activeVC = this.navCtrl.getActive();\n      let page = activeVC.instance;\n      page.tabs\n      if (!(page instanceof TabsPage)) {\n        if (!this.navCtrl.canGoBack()) {\n          return this.showExit();\n        }\n        return this.navCtrl.pop();\n      }\n      let tabs = page.tabs;\n      let activeNav = tabs.getSelected();\n      if (!activeNav.canGoBack()) {\n        return this.showExit();\n      }\n\n      return activeNav.pop();\n\n    }, 101);\n  }\n\n  //双击退出提示框\n  showExit() {\n    var _that = this;\n    if (this.backButtonPressed) {\n      this.platform.exitApp();\n    } else {\n      this.presentToast();\n      this.backButtonPressed = true;\n      if (this.itimer) {\n        clearTimeout(this.itimer);\n      }\n      this.itimer = setTimeout(() => {\n        _that.backButtonPressed = false\n      }, 2000);\n    }\n  }\n\n  presentToast() {\n    let toast = this.toastCtrl.create({\n      message: '再次点击返回退出APP',\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts"],"sourceRoot":""}